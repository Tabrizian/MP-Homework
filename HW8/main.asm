;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Mon Jun 19 2017
; Processor: ATmega16
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
.def temp=R16
.def index=R17
.def row=R18
;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
.org 0x00
      jmp Reset

.org 0x04
      jmp INT1_EXT0
.cseg
BCD_to_7_seg: .DB 0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6b, 0x7d, 0x07, 0x7f, 0x6f


Reset:
      sei
      in temp, GICR
      ori temp, (1 << INT1)
      out GICR, temp

      in temp, MCUCR
      andi temp, (0 << ISC11) | (0 << ISC10)
      out MCUCR, temp

      in temp, DDRC
      andi temp, (0 << DDC0) | (0 << DDC1) | (0 << DDC2)
      out DDRC, temp

      ldi temp, 255
      out PORTC, temp

      in temp, DDRB
      ori temp, (1 << DDB0) | (1 << DDB1) | (1 << DDB2) | (1 << DDB3) | (1 << DDB4) | (1 << DDB5)
      out DDRB, temp

      in temp, PORTB
      ori temp, (0 << PORTB0) | (0 << PORTB1) | (0 << PORTB2) | (1 << PORTB3) | (1 << PORTB4) | (1 << PORTB5)
      out PORTB, temp

      rjmp  Start

Delay:
      ldi r18, 0x02
delay_loop_1:
      ldi r16, 0xD0
delay_loop_2:
      ldi r17, 0xE0
delay_loop_3:
      nop       ; 1 clock
      dec r17   ; 1 clock
      cpi r17, 0x00  ; 1 clock
      brne delay_loop_3
      dec r16
      cpi r16, 0x00
      brne delay_loop_2
      dec r18
      cpi r18, 0x00
      brne delay_loop_1
      ret

INT1_EXT0:
      ldi temp, 0
      out DDRA, temp

      ldi temp, 0x00
      out PORTA, temp

      ldi temp, 0x00
      out DDRA, temp

      cbi PORTB, PORTB4
      sbis PINC, PINC0
      breq Equals1


      cbi PORTB, PORTB5
      sbi PORTB, PORTB4
      sbis PINC, PINC1
      breq Equals2

      sbi PORTB, PORTB4
      sbi PORTB, PORTB5

      cbi PORTB, PORTB3


Equals0:
      sbi PORTB, PORTB0
      jmp Next
Equals1:
      sbi PORTB, PORTB1
      jmp Next
Equals2:
      sbi PORTB, PORTB2
      jmp Next

Next:

      sbis PINA, PINA0
      ldi index, 0
      sbis PINA, PINA1
      ldi index, 1
      sbis PINA, PINA2
      ldi index, 2
      sbis PINA, PINA3
      ldi index, 3
      sbis PINA, PINA4
      ldi index, 4
      sbis PINA, PINA5
      ldi index, 5
      sbis PINA, PINA6
      ldi index, 6
      sbis PINA, PINA7
      ldi index, 7



      ldi temp, 0xFF
      out DDRA, temp

      ldi temp, low(BCD_to_7_seg)
      add temp, index

      ldi zh, 0
      ldi zl, 13
      add zl, index



      in temp, PORTB
      ori temp, (1 << PORTB3) | (1 << PORTB4) | (1 << PORTB5)
      out PORTB, temp

      lpm temp, Z

      out PORTA, temp
      call Delay



      ldi temp, 0x00
      out DDRA, temp

      ldi temp, (0 << PORTB0) | (0 << PORTB1) | (0 << PORTB2) | (1 << PORTB3) | (1 << PORTB4) | (1 << PORTB5)
      out PORTB, temp

      ldi temp, 0x00
      out PORTA, temp

      reti



;====================================================================
; CODE SEGMENT
;====================================================================

Start:
      ; Write your code here

Loop:
      rjmp  Loop

;====================================================================

