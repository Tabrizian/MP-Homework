;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Fri Apr 7 2017
; Processor: ATmega16
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
.def no_of_bytes=R16
.def start_index=R17
.def end_index=R18
.def current_max=R19
.def current_number=R20
.def current_index=R21
.def current_max_index=R22
.def temp=R23

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      ldi zh, 0x01
      ldi xh, 0x01
      ldi xl, 0x00
      ldi R25, 0x00
      st X, R25
      inc R25
      inc xl
      st X, R25
      inc R25
      inc xl
      st X, R25
      inc R25
      inc xl
      st X, R25
      inc R25
      inc xl
      st X, R25
      inc R25
      inc xl
      st X, R25
      inc R25
      inc xl
      st X, R25
      rjmp  Start

;====================================================================
; CODE SEGMENT
;====================================================================
Max:
      mov current_index, start_index
MaxLoop:
      mov zl, current_index
      ld current_number, Z
      cp current_number, current_max
      brlo skip
      mov current_max, current_number
      mov current_max_index, current_index
skip:
      inc current_index
      cp current_index, end_index
      brlo MaxLoop
ret

Start:
      ldi no_of_bytes, 0x64 ; No of bytes to sort
      ldi start_index, 0x00 ; Start Index
      ldi end_index, 0x09 ; End Index
Sort:
      ldi current_max, 0x00 ; Assumed Max index

      rcall max
      mov zl, start_index
      ld temp, z
      st Z, current_max
      mov zl, current_max_index
      st Z, temp
      inc start_index
      cp start_index, end_index
      brlo Sort

      ; Write your code here
Loop:
      rjmp  Loop

;====================================================================

