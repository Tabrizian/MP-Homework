;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Wed Jun 7 2017
; Processor: ATmega16
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
.def temp=R16
.def address_high=R17
.def address_low=R18
.def data=R19
;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      ldi temp, 0xFF
      out DDRD, temp
      out DDRC, temp
      sbi PORTD, PORTD7
      sbi PORTD, PORTD6


      rjmp  Start

;====================================================================
; CODE SEGMENT
;====================================================================
mem_read:
      ldi temp, 0x00
      out DDRA, temp
      out PORTA, temp

      out PORTC, address_low

      out PORTC, address_low
      ori address_high, (0 << 6) | (1 << 7)
      out PORTD, address_high

      NOP

      in data, PINA
      ret

mem_write:
      ldi temp, 0xFF
      out DDRA, temp

      out PORTC, address_low
      ori address_high, (1 << 6) | (0 << 7)

      out PORTD, address_high

      out PORTA, data
      ldi temp, 255
wait1:
      dec temp
      brne wait1


      ldi temp, 255
wait2:
      dec temp
      brne wait2


      ldi temp, 255
wait3:
      dec temp
      brne wait3
      ldi temp, 245
wait4:
      dec temp
      brne wait4

      sbi PORTD, PORTD7

      ret

Start:
      ; Write your code here
      ldi address_high, 0x11
      ldi address_low, 0x00
      rcall mem_read

      ldi address_low, 0x00
      ldi address_high, 0x33
      ldi data, 0x44
      rcall mem_write

Loop:
      rjmp  Loop

;====================================================================

